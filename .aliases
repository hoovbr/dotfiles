# Some handy ls aliases
alias ll="ls -lA"
alias la="ls -A"
alias l="ls -CF"

# cd to the hoov_rails directory and log in as hoov user
alias hoov="cd /var/www/hoov/code/hoov_rails && sudo -u hoov -H bash -l"

# Prints the $PATH env var, with line breaks instead of colons
alias path="tr ':' '\n' <<< $PATH"

# Logs useful debugging information about the system.
function debug() {
  echo "ðŸ’¿ Disk usage:\n"
  df -h
  echo

  echo "ðŸ’¿ Docker disk usage:\n"
  docker system df
  echo

  echo "ðŸªµ These are the Docker log files:\n"
  sudo find /var/lib/docker/containers/ -type f -name "*-json.log" -exec du -h {} + | sort -rh
  echo
}

function prune_docker() {
  echo "ðŸ‘€ This is the current Docker disk stats:"
  docker system df
  echo "Reclaiming all unused Docker resourcesâ€¦"
  docker system prune -a --volumes -f
  echo "âœ… Claimed all unused Docker resources. Docker disk stats:"
  docker system df
}

# Determines which package manager to use.
function package_manager() {
  if command -v yum >/dev/null 2>&1; then
    sudo yum "$@"
  elif command -v apt-get >/dev/null 2>&1; then
    sudo apt-get "$@"
  else
    echo "Error: neither yum nor apt-get is available." >&2
    exit 1
  fi
}

# Checks if a repo exists in a given directory, and if so, update it. Otherwise, clone it.
function clone_or_update() {
  repo_url="$1"
  repo_dir="$2"
  if [ -d "$repo_dir" ]; then
    echo "Repository '$repo_url' already exists in '$repo_dir'. Updating itâ€¦"
    (cd "$repo_dir" && git fetch && git pull)
    echo "Repository '$repo_url' updated successfully."
  else
    echo "Cloning repository '$repo_url'â€¦"
    git clone "$repo_url" "$repo_dir"
    echo "Repository '$repo_url' cloned successfully."
  fi
}

alias python=python3

# Cleans up Docker images, volumes, and systemd journal logs, freeing up space.
function cleanup() {
  echo "ðŸ§¹ Cleaning up Docker images..."
  docker image prune -af

  echo "ðŸ§¹ Cleaning up Docker volumes..."
  docker volume prune -f

  echo "ðŸ§¹ Cleaning up systemd journal logs (older than 7 days)..."
  journalctl --vacuum-time=7d

  echo "âœ… Cleanup done at $(date)"
}
